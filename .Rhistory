q()
q()
q()
q()
X<-1:10
if(x>5){ x<-0}
x<-1:10
if(x>5){x<-0}
x
f <- function(x){
g<-function(y){
y+z
}
z<-4
x+g(x)
}
z<-10
f(3)
g(x)
g
g(3)
g<-function(y){
y+z
}
x<-3
g(x)
f <- function(x){
g<-function(y){
y+z
}
}
f(3)
f(3)
z<-4
f(3)
f <- function(x){
g<-function(y){
y+z
}
z<-4
x+g(x)
}
f(3)
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
nxt()
swirl()
library("swirl")
ls()
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5, 10, length=30)
length()
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0, 1, 2), times = 10)
try(c(0,1,2),each=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,-10,6)
tf<-(num_vect<1)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name<-c(my_char,"sirisha")
my_name
paste=(my_name,collapse" ")
paste(my_name,collapse" ")
paste(my_name,collapse=" ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x<-c(44,NA,5,NA)
x*3
y<-
rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-c(1:20)
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patient,my_matrix)
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age","weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
==
5==7
TRUE==TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
5!=7
NOT(5==7)
!(5==7)
false&false
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE).
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
library(swirl)
swirl()
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range())
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,6,6,))
unique(c(3,4,5,5,6,6))
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
length(unique_vals)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
source('C:/Users/sunsi01/MYCOURSER/program2/programmingassignment2/cachematrix.R')
library(swirl)
ls()
swirl()
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags,class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
swirl()
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10, replace = FALSE)
sample(1:20, 10)
letters
LETTERS
sampl(LETTERS)
sample(LETTERS)
sample(C(0,1),100,REPLACE=TRUE)
sample(C(0,1),100,replace=TRUE)
sample(c(0,1),100,replace=TRUE)
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom()
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5,mean=10)
rpois(5)
rpois(5,lambda)
dpois(5,lambda)
rpois(5, 10)
my_pois<-replicate(100, rpois(5, 10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
library(swirl)
swirl()
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-POSIXlt(Sys.time())
t2<-POSIX1t(Sys.time())
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t24MIN
t2$min
d1$weekdays
weekdays(d1)
months(t1)
quarters(t2)
t3<-("October 17, 1986 08:24")
t3<-"October 17, 1986 08:24"
t4<-strptime(t3,"%B %d %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class()
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$speed,y=cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed",ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed",ylab="Stopping Distance")
plot(cars,main="my Ploy")
plot(cars,main="My Plot")
plot(cars,"My Plot Subtitle")
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2,red)
?plot
plot(cars,col=2)
plot(cars,xlim=c(10,15)
)
plot(cars,pch=2)
mtcars
data(mtcars)
?boxplot
boxplot(formula=mpg~cyl,data=cars)
boxplot(formula=mpg ~c yl,data=mtcars)
boxplot(formula=mpg ~ cyl,data=mtcars)
hist(mtcars$mpg)
swirl()
library(swirl)
swirl()
library(tidyr)
library(swirl)
swirl()
students
?gather
gather(students,sex,count,-grade)
student2
students2
res<-gather(students2,sex_class,count)
res<-gather(students2,sex_class,count,-grade)
res
?seperate
?separate
separate(res,sex_class,"sex","class")
separate(res,sex_class,c("sex","class"))
submit()
submit()
submit()
submit()
submit()
students3
reset()
?gather
submit()
submit()
?spread
submiit()
submit()
submit()
submit()
submit()
gather(studens3,class, grade, class1:class5, na.rm = TRUE)
submit()
submit()
submit()
reset()
submit()
extract_numeric("class5")
?mutate
submit()
submit()
submit()
students4
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
passed
failed
passed<- mutate("passed")
passed<- mutate(passed)
passed<- passed%>%mutate(status="passed")
failed<- failed%>%mutate(status="failed")
?bind_rows()
bind_rows(passed,failed)
sat
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
setwd("C:/Users/sunsi01/MYCOURSER/ExData_Plotting1")
source('C:/Users/sunsi01/MYCOURSER/ExData_Plotting1/plot3.R')
source('C:/Users/sunsi01/MYCOURSER/ExData_Plotting1/plot4.R')
